generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CommandStats {
  name     String  @id
  category String?

  uses Int
}

enum UserFlags {
  CONTRIBUTOR
}

model EvieUser {
  id       String      @id
  flags    UserFlags[]
  eviePlus EviePlus[]

  // Passport Authentication
  username     String?
  fetchedAt    DateTime?
  avatar       String?
  accessToken  String?
  refreshToken String?
}

model EviePlus {
  id String @id @default(cuid())

  owner   EvieUser @relation(fields: [ownerId], references: [id])
  ownerId String

  activeGuild   GuildSettings? @relation(fields: [activeGuildId], references: [id])
  activeGuildId String

  activeUntil DateTime?
  createdAt   DateTime  @default(now())
}

model GuildSettings {
  id       String     @id
  eviePlus EviePlus[]

  moderationSettings ModerationSettings?
  airportSettings    AirportSettings?

  tags             EvieTag[]
  importedMessages String[]
  logChannel       String?

  color         String  @default("#f47fff")
  moderatorRole String?
}

model ModerationSettings {
  guildId String        @id
  guild   GuildSettings @relation(fields: [guildId], references: [id])

  logChannel String?

  blockedWords      String[]
  phishingDetection Boolean  @default(false)
}

model AirportSettings {
  guildId String        @id
  guild   GuildSettings @relation(fields: [guildId], references: [id])

  channel       String?
  arrives       Boolean @default(false)
  arriveMessage String  @default("Welcome to our server!")
  departs       Boolean @default(false)
  departMessage String  @default("Goodbye!")

  joinRole     String  @default("")
  giveJoinRole Boolean @default(false)

  ping Boolean @default(false)
}

model EvieTag {
  id      String  @unique
  name    String
  content String
  embed   Boolean

  online Boolean @default(false)
  slug   String? @unique
  link   String?

  evieGuild GuildSettings? @relation(fields: [guildId], references: [id])
  guildId   String?
}

model ModAction {
  id            String    @id
  type          String?
  typeId        Int
  reason        String
  targetID      String
  guildId       String
  expiresAt     DateTime?
  moderatorID   String?
  logMessageID  String?
  moderatorName String?
  targetName    String    @default("Unknown")
}

model PickupRole {
  roleID  String @id
  guildID String
}

model AstralPlayer {
  id String @id

  xp Int @default(0)

  created DateTime @default(now())
}

model AstralConfig {
  guildId String @id

  rules Json @default("{ \"title\": \"rules\", \"type\": \"rich\",\"color\": 5793266, \"description\": \"No rules set yet!\" }")

  roles Json?

  roleDividerId String?

  feedbackChannel String?
}
